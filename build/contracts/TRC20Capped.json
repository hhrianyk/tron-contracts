{
  "contractName": "TRC20Capped",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "cap_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801562000010575f80fd5b50d380156200001d575f80fd5b50d280156200002a575f80fd5b506040516200188838038062001888833981810160405281019062000050919062000286565b6200006133620000b460201b60201c565b5f8111620000a6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200009d9062000314565b60405180910390fd5b806004819055505062000334565b620000ca8160036200011060201b90919060201c565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000148575f80fd5b6200015a8282620001be60201b60201c565b1562000164575f80fd5b6001825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603620001f7575f80fd5b825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f80fd5b5f819050919050565b62000262816200024e565b81146200026d575f80fd5b50565b5f81519050620002808162000257565b92915050565b5f602082840312156200029e576200029d6200024a565b5b5f620002ad8482850162000270565b91505092915050565b5f82825260208201905092915050565b7f436170206d7573742062652067726561746572207468616e20300000000000005f82015250565b5f620002fc601a83620002b6565b91506200030982620002c6565b602082019050919050565b5f6020820190508181035f8301526200032d81620002ee565b9050919050565b61154680620003425f395ff3fe608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b50600436106100e5575f3560e01c806370a08231116100a2578063a457c2d71161007c578063a457c2d71461023b578063a9059cbb1461026b578063aa271e1a1461029b578063dd62ed3e146102cb576100e5565b806370a08231146101e5578063983b2d56146102155780639865027514610231576100e5565b8063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063355274ea14610167578063395093511461018557806340c10f19146101b5575b5f80fd5b61010360048036038101906100fe919061124b565b6102fb565b60405161011091906112a3565b60405180910390f35b61012161041f565b60405161012e91906112cb565b60405180910390f35b610151600480360381019061014c91906112e4565b610428565b60405161015e91906112a3565b60405180910390f35b61016f610546565b60405161017c91906112cb565b60405180910390f35b61019f600480360381019061019a919061124b565b61054f565b6040516101ac91906112a3565b60405180910390f35b6101cf60048036038101906101ca919061124b565b610775565b6040516101dc91906112a3565b60405180910390f35b6101ff60048036038101906101fa9190611334565b6107d2565b60405161020c91906112cb565b60405180910390f35b61022f600480360381019061022a9190611334565b610817565b005b61023961086b565b005b6102556004803603810190610250919061124b565b610876565b60405161026291906112a3565b60405180910390f35b6102856004803603810190610280919061124b565b610a9c565b60405161029291906112a3565b60405180910390f35b6102b560048036038101906102b09190611334565b610ab2565b6040516102c291906112a3565b60405180910390f35b6102e560048036038101906102e0919061135f565b610ace565b6040516102f291906112cb565b60405180910390f35b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610333575f80fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161040d91906112cb565b60405180910390a36001905092915050565b5f600254905090565b5f6104b48260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061053b848484610b76565b600190509392505050565b5f600454905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610587575f80fd5b6106128260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460405161076391906112cb565b60405180910390a36001905092915050565b5f61077f33610ab2565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906113f7565b60405180910390fd5b6107c88383610d5b565b6001905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61082033610ab2565b61085f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610856906113f7565b60405180910390fd5b61086881610dc0565b50565b61087433610e1a565b565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ae575f80fd5b6109398260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610a8a91906112cb565b60405180910390a36001905092915050565b5f610aa8338484610b76565b6001905092915050565b5f610ac7826003610e7490919063ffffffff16565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f82821115610b5d575f80fd5b5f8284610b6a9190611442565b90508091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bad575f80fd5b610bfc815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c8b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d2891906112cb565b60405180910390a3505050565b5f808284610d439190611475565b905083811015610d51575f80fd5b8091505092915050565b60045481610d6761041f565b610d719190611475565b1115610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da9906114f2565b60405180910390fd5b610dbc8282610eff565b5050565b610dd481600361104990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b610e2e8160036110ed90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eac575f80fd5b825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f36575f80fd5b610f4b81600254610d3590919063ffffffff16565b600281905550610fa0815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161103d91906112cb565b60405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611080575f80fd5b61108a8282610e74565b15611093575f80fd5b6001825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611124575f80fd5b61112e8282610e74565b611136575f80fd5b5f825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6111bc81611193565b81146111c6575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111f2826111c9565b9050919050565b5f81359050611207816111b3565b611210816111e8565b905092915050565b5f819050919050565b61122a81611218565b8114611234575f80fd5b50565b5f8135905061124581611221565b92915050565b5f80604083850312156112615761126061118f565b5b5f61126e858286016111f9565b925050602061127f85828601611237565b9150509250929050565b5f8115159050919050565b61129d81611289565b82525050565b5f6020820190506112b65f830184611294565b92915050565b6112c581611218565b82525050565b5f6020820190506112de5f8301846112bc565b92915050565b5f805f606084860312156112fb576112fa61118f565b5b5f611308868287016111f9565b9350506020611319868287016111f9565b925050604061132a86828701611237565b9150509250925092565b5f602082840312156113495761134861118f565b5b5f611356848285016111f9565b91505092915050565b5f80604083850312156113755761137461118f565b5b5f611382858286016111f9565b9250506020611393858286016111f9565b9150509250929050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f742061206d696e7465722e0000000000000000005f82015250565b5f6113e160178361139d565b91506113ec826113ad565b602082019050919050565b5f6020820190508181035f83015261140e816113d5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144c82611218565b915061145783611218565b925082820390508181111561146f5761146e611415565b5b92915050565b5f61147f82611218565b915061148a83611218565b92508282019050808211156114a2576114a1611415565b5b92915050565b7f43617020657863656564656400000000000000000000000000000000000000005f82015250565b5f6114dc600c8361139d565b91506114e7826114a8565b602082019050919050565b5f6020820190508181035f830152611509816114d0565b905091905056fea26474726f6e58221220ec35e3d8925076684d63f6afb0d9af6273ad0d89548c465e32585abeea2d6b3964736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b50600436106100e5575f3560e01c806370a08231116100a2578063a457c2d71161007c578063a457c2d71461023b578063a9059cbb1461026b578063aa271e1a1461029b578063dd62ed3e146102cb576100e5565b806370a08231146101e5578063983b2d56146102155780639865027514610231576100e5565b8063095ea7b3146100e957806318160ddd1461011957806323b872dd14610137578063355274ea14610167578063395093511461018557806340c10f19146101b5575b5f80fd5b61010360048036038101906100fe919061124b565b6102fb565b60405161011091906112a3565b60405180910390f35b61012161041f565b60405161012e91906112cb565b60405180910390f35b610151600480360381019061014c91906112e4565b610428565b60405161015e91906112a3565b60405180910390f35b61016f610546565b60405161017c91906112cb565b60405180910390f35b61019f600480360381019061019a919061124b565b61054f565b6040516101ac91906112a3565b60405180910390f35b6101cf60048036038101906101ca919061124b565b610775565b6040516101dc91906112a3565b60405180910390f35b6101ff60048036038101906101fa9190611334565b6107d2565b60405161020c91906112cb565b60405180910390f35b61022f600480360381019061022a9190611334565b610817565b005b61023961086b565b005b6102556004803603810190610250919061124b565b610876565b60405161026291906112a3565b60405180910390f35b6102856004803603810190610280919061124b565b610a9c565b60405161029291906112a3565b60405180910390f35b6102b560048036038101906102b09190611334565b610ab2565b6040516102c291906112a3565b60405180910390f35b6102e560048036038101906102e0919061135f565b610ace565b6040516102f291906112cb565b60405180910390f35b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610333575f80fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258460405161040d91906112cb565b60405180910390a36001905092915050565b5f600254905090565b5f6104b48260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061053b848484610b76565b600190509392505050565b5f600454905090565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610587575f80fd5b6106128260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205460405161076391906112cb565b60405180910390a36001905092915050565b5f61077f33610ab2565b6107be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b5906113f7565b60405180910390fd5b6107c88383610d5b565b6001905092915050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61082033610ab2565b61085f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610856906113f7565b60405180910390fd5b61086881610dc0565b50565b61087433610e1a565b565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108ae575f80fd5b6109398260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054604051610a8a91906112cb565b60405180910390a36001905092915050565b5f610aa8338484610b76565b6001905092915050565b5f610ac7826003610e7490919063ffffffff16565b9050919050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f82821115610b5d575f80fd5b5f8284610b6a9190611442565b90508091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610bad575f80fd5b610bfc815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610b5090919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610c8b815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d2891906112cb565b60405180910390a3505050565b5f808284610d439190611475565b905083811015610d51575f80fd5b8091505092915050565b60045481610d6761041f565b610d719190611475565b1115610db2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610da9906114f2565b60405180910390fd5b610dbc8282610eff565b5050565b610dd481600361104990919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f660405160405180910390a250565b610e2e8160036110ed90919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669260405160405180910390a250565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610eac575f80fd5b825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f36575f80fd5b610f4b81600254610d3590919063ffffffff16565b600281905550610fa0815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610d3590919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff165f73ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161103d91906112cb565b60405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611080575f80fd5b61108a8282610e74565b15611093575f80fd5b6001825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611124575f80fd5b61112e8282610e74565b611136575f80fd5b5f825f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b6111bc81611193565b81146111c6575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6111f2826111c9565b9050919050565b5f81359050611207816111b3565b611210816111e8565b905092915050565b5f819050919050565b61122a81611218565b8114611234575f80fd5b50565b5f8135905061124581611221565b92915050565b5f80604083850312156112615761126061118f565b5b5f61126e858286016111f9565b925050602061127f85828601611237565b9150509250929050565b5f8115159050919050565b61129d81611289565b82525050565b5f6020820190506112b65f830184611294565b92915050565b6112c581611218565b82525050565b5f6020820190506112de5f8301846112bc565b92915050565b5f805f606084860312156112fb576112fa61118f565b5b5f611308868287016111f9565b9350506020611319868287016111f9565b925050604061132a86828701611237565b9150509250925092565b5f602082840312156113495761134861118f565b5b5f611356848285016111f9565b91505092915050565b5f80604083850312156113755761137461118f565b5b5f611382858286016111f9565b9250506020611393858286016111f9565b9150509250929050565b5f82825260208201905092915050565b7f43616c6c6572206973206e6f742061206d696e7465722e0000000000000000005f82015250565b5f6113e160178361139d565b91506113ec826113ad565b602082019050919050565b5f6020820190508181035f83015261140e816113d5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61144c82611218565b915061145783611218565b925082820390508181111561146f5761146e611415565b5b92915050565b5f61147f82611218565b915061148a83611218565b92508282019050808211156114a2576114a1611415565b5b92915050565b7f43617020657863656564656400000000000000000000000000000000000000005f82015250565b5f6114dc600c8361139d565b91506114e7826114a8565b602082019050919050565b5f6020820190508181035f830152611509816114d0565b905091905056fea26474726f6e58221220ec35e3d8925076684d63f6afb0d9af6273ad0d89548c465e32585abeea2d6b3964736f6c63430008160033",
  "sourceMap": "161:629:6:-:0;;;303:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;331:22:1;342:10;331;;;:22;;:::i;:::-;354:1:6;347:4;:8;339:47;;;;;;;;;;;;:::i;:::-;;;;;;;;;403:4;396;:11;;;;303:111;161:629;;768:119:1;824:21;837:7;824:8;:12;;;;:21;;;;:::i;:::-;872:7;860:20;;;;;;;;;;;;768:119;:::o;259:181:2:-;354:1;335:21;;:7;:21;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;:18;;:::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;786:162::-;858:4;901:1;882:21;;:7;:21;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;88:117:21:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:169::-;1135:11;1169:6;1164:3;1157:19;1209:4;1204:3;1200:14;1185:29;;1051:169;;;;:::o;1226:176::-;1366:28;1362:1;1354:6;1350:14;1343:52;1226:176;:::o;1408:366::-;1550:3;1571:67;1635:2;1630:3;1571:67;:::i;:::-;1564:74;;1647:93;1736:3;1647:93;:::i;:::-;1765:2;1760:3;1756:12;1749:19;;1408:366;;;:::o;1780:419::-;1946:4;1984:2;1973:9;1969:18;1961:26;;2033:9;2027:4;2023:20;2019:1;2008:9;2004:17;1997:47;2061:131;2187:4;2061:131;:::i;:::-;2053:139;;1780:419;;;:::o;161:629:6:-;;;;;;;",
  "deployedSourceMap": "161:629:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:238:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;482:73:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3828:362:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;469:128:8;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1023:104:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;591:90:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;687:75;;;:::i;:::-;;4666:372:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;478:107:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:167:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:238;2631:4;2674:1;2655:21;;:7;:21;;;2647:30;;;;;;2720:5;2688:8;:20;2697:10;2688:20;;;;;;;;;;;;;;;:29;2709:7;2688:29;;;;;;;;;;;;;;;:37;;;;2761:7;2740:36;;2749:10;2740:36;;;2770:5;2740:36;;;;;;:::i;:::-;;;;;;;;2793:4;2786:11;;2566:238;;;;:::o;721:89::-;765:7;791:12;;784:19;;721:89;:::o;3090:267::-;3207:4;3256:37;3287:5;3256:8;:14;3265:4;3256:14;;;;;;;;;;;;;;;:26;3271:10;3256:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3227:8;:14;3236:4;3227:14;;;;;;;;;;;;;;;:26;3242:10;3227:26;;;;;;;;;;;;;;;:66;;;;3303:26;3313:4;3319:2;3323:5;3303:9;:26::i;:::-;3346:4;3339:11;;3090:267;;;;;:::o;482:73:6:-;518:7;544:4;;537:11;;482:73;:::o;3828:362:4:-;3938:4;3985:1;3966:21;;:7;:21;;;3958:30;;;;;;4041:45;4075:10;4041:8;:20;4050:10;4041:20;;;;;;;;;;;;;;;:29;4062:7;4041:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3999:8;:20;4008:10;3999:20;;;;;;;;;;;;;;;:29;4020:7;3999:29;;;;;;;;;;;;;;;:88;;;;4123:7;4102:60;;4111:10;4102:60;;;4132:8;:20;4141:10;4132:20;;;;;;;;;;;;;;;:29;4153:7;4132:29;;;;;;;;;;;;;;;;4102:60;;;;;;:::i;:::-;;;;;;;;4179:4;4172:11;;3828:362;;;;:::o;469:128:8:-;537:4;406:20:1;415:10;406:8;:20::i;:::-;398:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;553:16:8::1;559:2;563:5;553;:16::i;:::-;586:4;579:11;;469:128:::0;;;;:::o;1023:104:4:-;1078:7;1104:9;:16;1114:5;1104:16;;;;;;;;;;;;;;;;1097:23;;1023:104;;;:::o;591:90:1:-;406:20;415:10;406:8;:20::i;:::-;398:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;655:19:::1;666:7;655:10;:19::i;:::-;591:90:::0;:::o;687:75::-;730:25;744:10;730:13;:25::i;:::-;687:75::o;4666:372:4:-;4781:4;4828:1;4809:21;;:7;:21;;;4801:30;;;;;;4884:50;4918:15;4884:8;:20;4893:10;4884:20;;;;;;;;;;;;;;;:29;4905:7;4884:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4842:8;:20;4851:10;4842:20;;;;;;;;;;;;;;;:29;4863:7;4842:29;;;;;;;;;;;;;;;:93;;;;4971:7;4950:60;;4959:10;4950:60;;;4980:8;:20;4989:10;4980:20;;;;;;;;;;;;;;;:29;5001:7;4980:29;;;;;;;;;;;;;;;;4950:60;;;;;;:::i;:::-;;;;;;;;5027:4;5020:11;;4666:372;;;;:::o;1793:137::-;1854:4;1870:32;1880:10;1892:2;1896:5;1870:9;:32::i;:::-;1919:4;1912:11;;1793:137;;;;:::o;478:107:1:-;534:4;557:21;570:7;557:8;:12;;:21;;;;:::i;:::-;550:28;;478:107;;;:::o;1458:167:4:-;1564:7;1594:8;:15;1603:5;1594:15;;;;;;;;;;;;;;;:24;1610:7;1594:24;;;;;;;;;;;;;;;;1587:31;;1458:167;;;;:::o;1198:145:13:-;1256:7;1288:1;1283;:6;;1275:15;;;;;;1300:9;1316:1;1312;:5;;;;:::i;:::-;1300:17;;1335:1;1328:8;;;1198:145;;;;:::o;5257:256:4:-;5358:1;5344:16;;:2;:16;;;5336:25;;;;;;5390:26;5410:5;5390:9;:15;5400:4;5390:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5372:9;:15;5382:4;5372:15;;;;;;;;;;;;;;;:44;;;;5442:24;5460:5;5442:9;:13;5452:2;5442:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5426:9;:13;5436:2;5426:13;;;;;;;;;;;;;;;:40;;;;5496:2;5481:25;;5490:4;5481:25;;;5500:5;5481:25;;;;;;:::i;:::-;;;;;;;;5257:256;;;:::o;1416:145:13:-;1474:7;1493:9;1509:1;1505;:5;;;;:::i;:::-;1493:17;;1533:1;1528;:6;;1520:15;;;;;;1553:1;1546:8;;;1416:145;;;;:::o;615:173:6:-;723:4;;714:5;698:13;:11;:13::i;:::-;:21;;;;:::i;:::-;:29;;690:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;754:27;766:7;775:5;754:11;:27::i;:::-;615:173;;:::o;768:119:1:-;824:21;837:7;824:8;:12;;:21;;;;:::i;:::-;872:7;860:20;;;;;;;;;;;;768:119;:::o;893:127::-;952:24;968:7;952:8;:15;;:24;;;;:::i;:::-;1005:7;991:22;;;;;;;;;;;;893:127;:::o;786:162:2:-;858:4;901:1;882:21;;:7;:21;;;874:30;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;5856:271:4:-;5957:1;5938:21;;:7;:21;;;5930:30;;;;;;5986:23;6003:5;5986:12;;:16;;:23;;;;:::i;:::-;5971:12;:38;;;;6040:29;6063:5;6040:9;:18;6050:7;6040:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6019:9;:18;6029:7;6019:18;;;;;;;;;;;;;;;:50;;;;6105:7;6084:36;;6101:1;6084:36;;;6114:5;6084:36;;;;;;:::i;:::-;;;;;;;;5856:271;;:::o;259:181:2:-;354:1;335:21;;:7;:21;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;514:184::-;612:1;593:21;;:7;:21;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;686:5;663:4;:11;;:20;675:7;663:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;514:184;;:::o;88:117:21:-;197:1;194;187:12;334:128;371:7;411:44;404:5;400:56;389:67;;334:128;;;:::o;468:122::-;541:24;559:5;541:24;:::i;:::-;534:5;531:35;521:63;;580:1;577;570:12;521:63;468:122;:::o;596:126::-;633:7;673:42;666:5;662:54;651:65;;596:126;;;:::o;728:96::-;765:7;794:24;812:5;794:24;:::i;:::-;783:35;;728:96;;;:::o;830:181::-;876:5;914:6;901:20;892:29;;930:33;957:5;930:33;:::i;:::-;981:24;999:5;981:24;:::i;:::-;972:33;;830:181;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:139::-;1274:5;1312:6;1299:20;1290:29;;1328:33;1355:5;1328:33;:::i;:::-;1228:139;;;;:::o;1373:474::-;1441:6;1449;1498:2;1486:9;1477:7;1473:23;1469:32;1466:119;;;1504:79;;:::i;:::-;1466:119;1624:1;1649:53;1694:7;1685:6;1674:9;1670:22;1649:53;:::i;:::-;1639:63;;1595:117;1751:2;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1722:118;1373:474;;;;;:::o;1853:90::-;1887:7;1930:5;1923:13;1916:21;1905:32;;1853:90;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;1949:109;;:::o;2064:210::-;2151:4;2189:2;2178:9;2174:18;2166:26;;2202:65;2264:1;2253:9;2249:17;2240:6;2202:65;:::i;:::-;2064:210;;;;:::o;2280:118::-;2367:24;2385:5;2367:24;:::i;:::-;2362:3;2355:37;2280:118;;:::o;2404:222::-;2497:4;2535:2;2524:9;2520:18;2512:26;;2548:71;2616:1;2605:9;2601:17;2592:6;2548:71;:::i;:::-;2404:222;;;;:::o;2632:619::-;2709:6;2717;2725;2774:2;2762:9;2753:7;2749:23;2745:32;2742:119;;;2780:79;;:::i;:::-;2742:119;2900:1;2925:53;2970:7;2961:6;2950:9;2946:22;2925:53;:::i;:::-;2915:63;;2871:117;3027:2;3053:53;3098:7;3089:6;3078:9;3074:22;3053:53;:::i;:::-;3043:63;;2998:118;3155:2;3181:53;3226:7;3217:6;3206:9;3202:22;3181:53;:::i;:::-;3171:63;;3126:118;2632:619;;;;;:::o;3257:329::-;3316:6;3365:2;3353:9;3344:7;3340:23;3336:32;3333:119;;;3371:79;;:::i;:::-;3333:119;3491:1;3516:53;3561:7;3552:6;3541:9;3537:22;3516:53;:::i;:::-;3506:63;;3462:117;3257:329;;;;:::o;3592:474::-;3660:6;3668;3717:2;3705:9;3696:7;3692:23;3688:32;3685:119;;;3723:79;;:::i;:::-;3685:119;3843:1;3868:53;3913:7;3904:6;3893:9;3889:22;3868:53;:::i;:::-;3858:63;;3814:117;3970:2;3996:53;4041:7;4032:6;4021:9;4017:22;3996:53;:::i;:::-;3986:63;;3941:118;3592:474;;;;;:::o;4072:169::-;4156:11;4190:6;4185:3;4178:19;4230:4;4225:3;4221:14;4206:29;;4072:169;;;;:::o;4247:173::-;4387:25;4383:1;4375:6;4371:14;4364:49;4247:173;:::o;4426:366::-;4568:3;4589:67;4653:2;4648:3;4589:67;:::i;:::-;4582:74;;4665:93;4754:3;4665:93;:::i;:::-;4783:2;4778:3;4774:12;4767:19;;4426:366;;;:::o;4798:419::-;4964:4;5002:2;4991:9;4987:18;4979:26;;5051:9;5045:4;5041:20;5037:1;5026:9;5022:17;5015:47;5079:131;5205:4;5079:131;:::i;:::-;5071:139;;4798:419;;;:::o;5223:180::-;5271:77;5268:1;5261:88;5368:4;5365:1;5358:15;5392:4;5389:1;5382:15;5409:194;5449:4;5469:20;5487:1;5469:20;:::i;:::-;5464:25;;5503:20;5521:1;5503:20;:::i;:::-;5498:25;;5547:1;5544;5540:9;5532:17;;5571:1;5565:4;5562:11;5559:37;;;5576:18;;:::i;:::-;5559:37;5409:194;;;;:::o;5609:191::-;5649:3;5668:20;5686:1;5668:20;:::i;:::-;5663:25;;5702:20;5720:1;5702:20;:::i;:::-;5697:25;;5745:1;5742;5738:9;5731:16;;5766:3;5763:1;5760:10;5757:36;;;5773:18;;:::i;:::-;5757:36;5609:191;;;;:::o;5806:162::-;5946:14;5942:1;5934:6;5930:14;5923:38;5806:162;:::o;5974:366::-;6116:3;6137:67;6201:2;6196:3;6137:67;:::i;:::-;6130:74;;6213:93;6302:3;6213:93;:::i;:::-;6331:2;6326:3;6322:12;6315:19;;5974:366;;;:::o;6346:419::-;6512:4;6550:2;6539:9;6535:18;6527:26;;6599:9;6593:4;6589:20;6585:1;6574:9;6570:17;6563:47;6627:131;6753:4;6627:131;:::i;:::-;6619:139;;6346:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./TRC20Mintable.sol\";\n\n/**\n * @title Capped token\n * @dev Mintable token with a token cap.\n */\ncontract TRC20Capped is TRC20Mintable {\n    uint256 private _cap;\n\n    // Constructor renamed parameter to avoid shadowing 'cap' function\n    constructor(uint256 cap_) {\n        require(cap_ > 0, \"Cap must be greater than 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @return the cap for the token minting.\n     */\n    function cap() public view returns (uint256) {\n        return _cap;\n    }\n\n    // Override _mint function with proper visibility\n    function _mint(address account, uint256 value) internal override {\n        require(totalSupply() + value <= _cap, \"Cap exceeded\");\n        super._mint(account, value);\n    }\n}\n\n",
  "sourcePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Capped.sol",
  "ast": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Capped.sol",
    "exportedSymbols": {
      "ITRC20": [
        340
      ],
      "MinterRole": [
        166
      ],
      "Roles": [
        270
      ],
      "SafeMath": [
        1631
      ],
      "TRC20": [
        771
      ],
      "TRC20Capped": [
        866
      ],
      "TRC20Mintable": [
        958
      ]
    },
    "id": 867,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 807,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Mintable.sol",
        "file": "./TRC20Mintable.sol",
        "id": 808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 959,
        "src": "58:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 810,
              "name": "TRC20Mintable",
              "nameLocations": [
                "185:13:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 958,
              "src": "185:13:6"
            },
            "id": 811,
            "nodeType": "InheritanceSpecifier",
            "src": "185:13:6"
          }
        ],
        "canonicalName": "TRC20Capped",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 809,
          "nodeType": "StructuredDocumentation",
          "src": "89:71:6",
          "text": " @title Capped token\n @dev Mintable token with a token cap."
        },
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          958,
          166,
          771,
          340
        ],
        "name": "TRC20Capped",
        "nameLocation": "170:11:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 813,
            "mutability": "mutable",
            "name": "_cap",
            "nameLocation": "221:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 866,
            "src": "205:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 812,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "329:85:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 819,
                          "name": "cap_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "347:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "354:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "347:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436170206d7573742062652067726561746572207468616e2030",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "357:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e183aa048a71e5e23fea18f2a2522958a8400e3c1ab664f1955f1a074c38645",
                          "typeString": "literal_string \"Cap must be greater than 0\""
                        },
                        "value": "Cap must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e183aa048a71e5e23fea18f2a2522958a8400e3c1ab664f1955f1a074c38645",
                          "typeString": "literal_string \"Cap must be greater than 0\""
                        }
                      ],
                      "id": 818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "339:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "339:47:6"
                },
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 825,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "396:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 826,
                      "name": "cap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "403:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "396:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "396:11:6"
                }
              ]
            },
            "id": 830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "cap_",
                  "nameLocation": "323:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "315:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "314:14:6"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:6"
            },
            "scope": 866,
            "src": "303:111:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "527:28:6",
              "statements": [
                {
                  "expression": {
                    "id": 836,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "544:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 837,
                  "nodeType": "Return",
                  "src": "537:11:6"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "420:57:6",
              "text": " @return the cap for the token minting."
            },
            "functionSelector": "355274ea",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nameLocation": "491:3:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:6"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "518:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:9:6"
            },
            "scope": 866,
            "src": "482:73:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              694
            ],
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "680:108:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 848,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "698:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "698:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 850,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "714:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "698:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 852,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "723:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "698:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436170206578636565646564",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "729:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
                          "typeString": "literal_string \"Cap exceeded\""
                        },
                        "value": "Cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
                          "typeString": "literal_string \"Cap exceeded\""
                        }
                      ],
                      "id": 847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "690:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "690:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 860,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "766:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "775:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 857,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "754:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TRC20Capped_$866_$",
                          "typeString": "type(contract super TRC20Capped)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "760:5:6",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 694,
                      "src": "754:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "754:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "754:27:6"
                }
              ]
            },
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "624:5:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 845,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "671:8:6"
            },
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "638:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "630:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "655:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "647:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:32:6"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:6"
            },
            "scope": 866,
            "src": "615:173:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 867,
        "src": "161:629:6",
        "usedErrors": [],
        "usedEvents": [
          71,
          75,
          331,
          339
        ]
      }
    ],
    "src": "33:759:6"
  },
  "legacyAST": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Capped.sol",
    "exportedSymbols": {
      "ITRC20": [
        340
      ],
      "MinterRole": [
        166
      ],
      "Roles": [
        270
      ],
      "SafeMath": [
        1631
      ],
      "TRC20": [
        771
      ],
      "TRC20Capped": [
        866
      ],
      "TRC20Mintable": [
        958
      ]
    },
    "id": 867,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 807,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:6"
      },
      {
        "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Mintable.sol",
        "file": "./TRC20Mintable.sol",
        "id": 808,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 867,
        "sourceUnit": 959,
        "src": "58:29:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 810,
              "name": "TRC20Mintable",
              "nameLocations": [
                "185:13:6"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 958,
              "src": "185:13:6"
            },
            "id": 811,
            "nodeType": "InheritanceSpecifier",
            "src": "185:13:6"
          }
        ],
        "canonicalName": "TRC20Capped",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 809,
          "nodeType": "StructuredDocumentation",
          "src": "89:71:6",
          "text": " @title Capped token\n @dev Mintable token with a token cap."
        },
        "fullyImplemented": true,
        "id": 866,
        "linearizedBaseContracts": [
          866,
          958,
          166,
          771,
          340
        ],
        "name": "TRC20Capped",
        "nameLocation": "170:11:6",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 813,
            "mutability": "mutable",
            "name": "_cap",
            "nameLocation": "221:4:6",
            "nodeType": "VariableDeclaration",
            "scope": 866,
            "src": "205:20:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 812,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "205:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 829,
              "nodeType": "Block",
              "src": "329:85:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 819,
                          "name": "cap_",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 815,
                          "src": "347:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 820,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "354:1:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "347:8:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436170206d7573742062652067726561746572207468616e2030",
                        "id": 822,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "357:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e183aa048a71e5e23fea18f2a2522958a8400e3c1ab664f1955f1a074c38645",
                          "typeString": "literal_string \"Cap must be greater than 0\""
                        },
                        "value": "Cap must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e183aa048a71e5e23fea18f2a2522958a8400e3c1ab664f1955f1a074c38645",
                          "typeString": "literal_string \"Cap must be greater than 0\""
                        }
                      ],
                      "id": 818,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "339:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "339:47:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 824,
                  "nodeType": "ExpressionStatement",
                  "src": "339:47:6"
                },
                {
                  "expression": {
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 825,
                      "name": "_cap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 813,
                      "src": "396:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 826,
                      "name": "cap_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 815,
                      "src": "403:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "396:11:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "396:11:6"
                }
              ]
            },
            "id": 830,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 815,
                  "mutability": "mutable",
                  "name": "cap_",
                  "nameLocation": "323:4:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 830,
                  "src": "315:12:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "315:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "314:14:6"
            },
            "returnParameters": {
              "id": 817,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "329:0:6"
            },
            "scope": 866,
            "src": "303:111:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 838,
              "nodeType": "Block",
              "src": "527:28:6",
              "statements": [
                {
                  "expression": {
                    "id": 836,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 813,
                    "src": "544:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 835,
                  "id": 837,
                  "nodeType": "Return",
                  "src": "537:11:6"
                }
              ]
            },
            "documentation": {
              "id": 831,
              "nodeType": "StructuredDocumentation",
              "src": "420:57:6",
              "text": " @return the cap for the token minting."
            },
            "functionSelector": "355274ea",
            "id": 839,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cap",
            "nameLocation": "491:3:6",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "494:2:6"
            },
            "returnParameters": {
              "id": 835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 834,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 839,
                  "src": "518:7:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:9:6"
            },
            "scope": 866,
            "src": "482:73:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              694
            ],
            "body": {
              "id": 864,
              "nodeType": "Block",
              "src": "680:108:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 848,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "698:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "698:13:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 850,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "714:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "698:21:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 852,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 813,
                          "src": "723:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "698:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436170206578636565646564",
                        "id": 854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "729:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
                          "typeString": "literal_string \"Cap exceeded\""
                        },
                        "value": "Cap exceeded"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e77983fe614eb336bdfe184629900fd905cf00462bcc70053be44162ec133f94",
                          "typeString": "literal_string \"Cap exceeded\""
                        }
                      ],
                      "id": 847,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "690:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "690:54:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 856,
                  "nodeType": "ExpressionStatement",
                  "src": "690:54:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 860,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 841,
                        "src": "766:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 861,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 843,
                        "src": "775:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 857,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "754:5:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_TRC20Capped_$866_$",
                          "typeString": "type(contract super TRC20Capped)"
                        }
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "760:5:6",
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 694,
                      "src": "754:11:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "754:27:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 863,
                  "nodeType": "ExpressionStatement",
                  "src": "754:27:6"
                }
              ]
            },
            "id": 865,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nameLocation": "624:5:6",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 845,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "671:8:6"
            },
            "parameters": {
              "id": 844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 841,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "638:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "630:15:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "630:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 843,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "655:5:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 865,
                  "src": "647:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "647:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "629:32:6"
            },
            "returnParameters": {
              "id": 846,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:0:6"
            },
            "scope": 866,
            "src": "615:173:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 867,
        "src": "161:629:6",
        "usedErrors": [],
        "usedEvents": [
          71,
          75,
          331,
          339
        ]
      }
    ],
    "src": "33:759:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.22+commit.5ed3e10f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-01-31T04:41:48.117Z"
}