{
  "contractName": "TRON",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTokenImageURL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_url",
          "type": "string"
        }
      ],
      "name": "setTokenImageURL",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateTokenPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b5060043610610121575f3560e01c8063715018a6116100b857806398d5fdca1161008757806398d5fdca14610299578063a9059cbb146102b7578063c71473e7146102e7578063dd62ed3e14610305578063f2fde38b1461033557610121565b8063715018a6146102355780637ff9b5961461023f5780638da5cb5b1461025d57806395d89b411461027b57610121565b80631c8c3324116100f45780631c8c33241461019b57806323b872dd146101b7578063313ce567146101e757806370a082311461020557610121565b806306fdde03146101255780630790c53714610143578063095ea7b31461014d57806318160ddd1461017d575b5f80fd5b61012d610351565b60405161013a9190610f77565b60405180910390f35b61014b6103e1565b005b61016760048036038101906101629190611060565b610438565b60405161017491906110b8565b60405180910390f35b61018561045a565b60405161019291906110e0565b60405180910390f35b6101b560048036038101906101b09190611225565b610463565b005b6101d160048036038101906101cc919061126c565b61047e565b6040516101de91906110b8565b60405180910390f35b6101ef6104ac565b6040516101fc91906112d7565b60405180910390f35b61021f600480360381019061021a91906112f0565b6104b4565b60405161022c91906110e0565b60405180910390f35b61023d6104f9565b005b61024761050c565b60405161025491906110e0565b60405180910390f35b610265610512565b604051610272919061132a565b60405180910390f35b61028361053a565b6040516102909190610f77565b60405180910390f35b6102a16105ca565b6040516102ae919061135b565b60405180910390f35b6102d160048036038101906102cc9190611060565b610667565b6040516102de91906110b8565b60405180910390f35b6102ef610689565b6040516102fc9190610f77565b60405180910390f35b61031f600480360381019061031a9190611374565b610719565b60405161032c91906110e0565b60405180910390f35b61034f600480360381019061034a91906112f0565b61079b565b005b606060038054610360906113df565b80601f016020809104026020016040519081016040528092919081815260200182805461038c906113df565b80156103d75780601f106103ae576101008083540402835291602001916103d7565b820191905f5260205f20905b8154815290600101906020018083116103ba57829003601f168201915b5050505050905090565b5f6103ea6105ca565b90505f811361042e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042590611459565b60405180910390fd5b8060078190555050565b5f8061044261081f565b905061044f818585610826565b600191505092915050565b5f600254905090565b61046b610838565b806008908161047a9190611614565b5050565b5f8061048861081f565b90506104958582856108bf565b6104a0858585610952565b60019150509392505050565b5f6012905090565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610501610838565b61050a5f610a42565b565b60075481565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060048054610549906113df565b80601f0160208091040260200160405190810160405280929190818152602001828054610575906113df565b80156105c05780601f10610597576101008083540402835291602001916105c0565b820191905f5260205f20905b8154815290600101906020018083116105a357829003601f168201915b5050505050905090565b5f8060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610636573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061065a9190611760565b5050509150508091505090565b5f8061067161081f565b905061067e818585610952565b600191505092915050565b606060088054610698906113df565b80601f01602080910402602001604051908101604052809291908181526020018280546106c4906113df565b801561070f5780601f106106e65761010080835404028352916020019161070f565b820191905f5260205f20905b8154815290600101906020018083116106f257829003601f168201915b5050505050905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b6107a3610838565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610813575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161080a919061132a565b60405180910390fd5b61081c81610a42565b50565b5f33905090565b6108338383836001610b05565b505050565b61084061081f565b73ffffffffffffffffffffffffffffffffffffffff1661085e610512565b73ffffffffffffffffffffffffffffffffffffffff16146108bd5761088161081f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016108b4919061132a565b60405180910390fd5b565b5f6108ca8484610719565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81101561094c578181101561093d578281836040517ffb8f41b2000000000000000000000000000000000000000000000000000000008152600401610934939291906117d7565b60405180910390fd5b61094b84848484035f610b05565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036109c2575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109b9919061132a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a32575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a29919061132a565b60405180910390fd5b610a3d838383610cd4565b505050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b75575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b6c919061132a565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610be5575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610bdc919061132a565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610cce578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610cc591906110e0565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d24578060025f828254610d189190611839565b92505081905550610df2565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610dad578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610da4939291906117d7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610e39578060025f8282540392505081905550610e83565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610ee091906110e0565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015610f24578082015181840152602081019050610f09565b5f8484015250505050565b5f601f19601f8301169050919050565b5f610f4982610eed565b610f538185610ef7565b9350610f63818560208601610f07565b610f6c81610f2f565b840191505092915050565b5f6020820190508181035f830152610f8f8184610f3f565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b610fd181610fa8565b8114610fdb575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61100782610fde565b9050919050565b5f8135905061101c81610fc8565b61102581610ffd565b905092915050565b5f819050919050565b61103f8161102d565b8114611049575f80fd5b50565b5f8135905061105a81611036565b92915050565b5f806040838503121561107657611075610fa0565b5b5f6110838582860161100e565b92505060206110948582860161104c565b9150509250929050565b5f8115159050919050565b6110b28161109e565b82525050565b5f6020820190506110cb5f8301846110a9565b92915050565b6110da8161102d565b82525050565b5f6020820190506110f35f8301846110d1565b92915050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61113782610f2f565b810181811067ffffffffffffffff8211171561115657611155611101565b5b80604052505050565b5f611168610f97565b9050611174828261112e565b919050565b5f67ffffffffffffffff82111561119357611192611101565b5b61119c82610f2f565b9050602081019050919050565b828183375f83830152505050565b5f6111c96111c484611179565b61115f565b9050828152602081018484840111156111e5576111e46110fd565b5b6111f08482856111a9565b509392505050565b5f82601f83011261120c5761120b6110f9565b5b813561121c8482602086016111b7565b91505092915050565b5f6020828403121561123a57611239610fa0565b5b5f82013567ffffffffffffffff81111561125757611256610fa4565b5b611263848285016111f8565b91505092915050565b5f805f6060848603121561128357611282610fa0565b5b5f6112908682870161100e565b93505060206112a18682870161100e565b92505060406112b28682870161104c565b9150509250925092565b5f60ff82169050919050565b6112d1816112bc565b82525050565b5f6020820190506112ea5f8301846112c8565b92915050565b5f6020828403121561130557611304610fa0565b5b5f6113128482850161100e565b91505092915050565b61132481610ffd565b82525050565b5f60208201905061133d5f83018461131b565b92915050565b5f819050919050565b61135581611343565b82525050565b5f60208201905061136e5f83018461134c565b92915050565b5f806040838503121561138a57611389610fa0565b5b5f6113978582860161100e565b92505060206113a88582860161100e565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806113f657607f821691505b602082108103611409576114086113b2565b5b50919050565b7f496e76616c6964207072696365000000000000000000000000000000000000005f82015250565b5f611443600d83610ef7565b915061144e8261140f565b602082019050919050565b5f6020820190508181035f83015261147081611437565b9050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026114d37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611498565b6114dd8683611498565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61151861151361150e8461102d565b6114f5565b61102d565b9050919050565b5f819050919050565b611531836114fe565b61154561153d8261151f565b8484546114a4565b825550505050565b5f90565b61155961154d565b611564818484611528565b505050565b5b818110156115875761157c5f82611551565b60018101905061156a565b5050565b601f8211156115cc5761159d81611477565b6115a684611489565b810160208510156115b5578190505b6115c96115c185611489565b830182611569565b50505b505050565b5f82821c905092915050565b5f6115ec5f19846008026115d1565b1980831691505092915050565b5f61160483836115dd565b9150826002028217905092915050565b61161d82610eed565b67ffffffffffffffff81111561163657611635611101565b5b61164082546113df565b61164b82828561158b565b5f60209050601f83116001811461167c575f841561166a578287015190505b61167485826115f9565b8655506116db565b601f19841661168a86611477565b5f5b828110156116b15784890151825560018201915060208501945060208101905061168c565b868310156116ce57848901516116ca601f8916826115dd565b8355505b6001600288020188555050505b505050505050565b5f69ffffffffffffffffffff82169050919050565b611701816116e3565b811461170b575f80fd5b50565b5f8151905061171c816116f8565b92915050565b61172b81611343565b8114611735575f80fd5b50565b5f8151905061174681611722565b92915050565b5f8151905061175a81611036565b92915050565b5f805f805f60a0868803121561177957611778610fa0565b5b5f6117868882890161170e565b955050602061179788828901611738565b94505060406117a88882890161174c565b93505060606117b98882890161174c565b92505060806117ca8882890161170e565b9150509295509295909350565b5f6060820190506117ea5f83018661131b565b6117f760208301856110d1565b61180460408301846110d1565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6118438261102d565b915061184e8361102d565b92508282019050808211156118665761186561180c565b5b9291505056fea26474726f6e582212201f2c0cd160e15f7cd7115e0b2ad8fe9930f1364f4cbcf9338fd6e9641102c45364736f6c63430008160033",
  "sourceMap": "300:2055:1:-:0;;;675:450;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:10;1601:113:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:3;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;757:10:1::2;744;:23;;;;883:42;849:9;;:77;;;;;;;;;;;;;;;;;;1008:43;1014:10;1040;:8;;;:10;;:::i;:::-;1036:2;:14;;;;:::i;:::-;1026:7;:24;;;;:::i;:::-;1008:5;;;:43;;:::i;:::-;300:2055:::0;;2912:187:3;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2707:82:5:-;2756:5;2780:2;2773:9;;2707:82;:::o;7458:208::-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:102;6048:8;6095:5;6092:1;6088:13;6067:34;;6006:102;;;:::o;6114:848::-;6175:5;6182:4;6206:6;6197:15;;6230:5;6221:14;;6244:712;6265:1;6255:8;6252:15;6244:712;;;6360:4;6355:3;6351:14;6345:4;6342:24;6339:50;;;6369:18;;:::i;:::-;6339:50;6419:1;6409:8;6405:16;6402:451;;;6834:4;6827:5;6823:16;6814:25;;6402:451;6884:4;6878;6874:15;6866:23;;6914:32;6937:8;6914:32;:::i;:::-;6902:44;;6244:712;;;6114:848;;;;;;;:::o;6968:1073::-;7022:5;7213:8;7203:40;;7234:1;7225:10;;7236:5;;7203:40;7262:4;7252:36;;7279:1;7270:10;;7281:5;;7252:36;7348:4;7396:1;7391:27;;;;7432:1;7427:191;;;;7341:277;;7391:27;7409:1;7400:10;;7411:5;;;7427:191;7472:3;7462:8;7459:17;7456:43;;;7479:18;;:::i;:::-;7456:43;7528:8;7525:1;7521:16;7512:25;;7563:3;7556:5;7553:14;7550:40;;;7570:18;;:::i;:::-;7550:40;7603:5;;;7341:277;;7727:2;7717:8;7714:16;7708:3;7702:4;7699:13;7695:36;7677:2;7667:8;7664:16;7659:2;7653:4;7650:12;7646:35;7630:111;7627:246;;;7783:8;7777:4;7773:19;7764:28;;7818:3;7811:5;7808:14;7805:40;;;7825:18;;:::i;:::-;7805:40;7858:5;;7627:246;7898:42;7936:3;7926:8;7920:4;7917:1;7898:42;:::i;:::-;7883:57;;;;7972:4;7967:3;7963:14;7956:5;7953:25;7950:51;;;7981:18;;:::i;:::-;7950:51;8030:4;8023:5;8019:16;8010:25;;6968:1073;;;;;;:::o;8047:86::-;8082:7;8122:4;8115:5;8111:16;8100:27;;8047:86;;;:::o;8139:281::-;8197:5;8221:23;8239:4;8221:23;:::i;:::-;8213:31;;8265:25;8281:8;8265:25;:::i;:::-;8253:37;;8309:104;8346:66;8336:8;8330:4;8309:104;:::i;:::-;8300:113;;8139:281;;;;:::o;8426:410::-;8466:7;8489:20;8507:1;8489:20;:::i;:::-;8484:25;;8523:20;8541:1;8523:20;:::i;:::-;8518:25;;8578:1;8575;8571:9;8600:30;8618:11;8600:30;:::i;:::-;8589:41;;8779:1;8770:7;8766:15;8763:1;8760:22;8740:1;8733:9;8713:83;8690:139;;8809:18;;:::i;:::-;8690:139;8474:362;8426:410;;;;:::o;8842:191::-;8882:3;8901:20;8919:1;8901:20;:::i;:::-;8896:25;;8935:20;8953:1;8935:20;:::i;:::-;8930:25;;8978:1;8975;8971:9;8964:16;;8999:3;8996:1;8993:10;8990:36;;;9006:18;;:::i;:::-;8990:36;8842:191;;;;:::o;9039:118::-;9126:24;9144:5;9126:24;:::i;:::-;9121:3;9114:37;9039:118;;:::o;9163:442::-;9312:4;9350:2;9339:9;9335:18;9327:26;;9363:71;9431:1;9420:9;9416:17;9407:6;9363:71;:::i;:::-;9444:72;9512:2;9501:9;9497:18;9488:6;9444:72;:::i;:::-;9526;9594:2;9583:9;9579:18;9570:6;9526:72;:::i;:::-;9163:442;;;;;;:::o;9611:222::-;9704:4;9742:2;9731:9;9727:18;9719:26;;9755:71;9823:1;9812:9;9808:17;9799:6;9755:71;:::i;:::-;9611:222;;;;:::o;300:2055:1:-;;;;;;;",
  "deployedSourceMap": "300:2055:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1214:298:1;;;:::i;:::-;;3998:186:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2849:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2060:100:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4776:244:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3004:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:3;;;:::i;:::-;;454:25:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1588:335:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3315:178:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2252:101:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1779:89:5;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;1214:298:1:-;1259:9;1271:10;:8;:10::i;:::-;1259:22;;1351:1;1343:5;:9;1335:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;1455:5;1434:10;:27;;;;1249:263;1214:298::o;3998:186:5:-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;2849:97::-;2901:7;2927:12;;2920:19;;2849:97;:::o;2060:100:1:-;1531:13:3;:11;:13::i;:::-;2149:4:1::1;2133:13;:20;;;;;;:::i;:::-;;2060:100:::0;:::o;4776:244:5:-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;2707:82::-;2756:5;2780:2;2773:9;;2707:82;:::o;3004:116::-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:3:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;454:25:1:-;;;;:::o;1638:85:3:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1981:93:5:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;1588:335:1:-;1629:3;1692:9;1824;;;;;;;;;;;:25;;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1644:207;;;;;;1911:5;1904:12;;;1588:335;:::o;3315:178:5:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;2252:101:1:-;2301:13;2333;2326:20;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2252:101;:::o;3551:140:5:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;2543:215:3:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:5:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:3:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:476:5:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10599:17;10580:16;:36;10576:309;;;10655:5;10636:16;:24;10632:130;;;10714:7;10723:16;10741:5;10687:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10632:130;10803:57;10812:5;10819:7;10847:5;10828:16;:24;10854:5;10803:8;:57::i;:::-;10576:309;10504:387;10415:476;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;2912:187:3:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;9701:432:5:-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:9:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:75::-;1382:6;1415:2;1409:9;1399:19;;1349:75;:::o;1430:117::-;1539:1;1536;1529:12;1553:117;1662:1;1659;1652:12;1676:128;1713:7;1753:44;1746:5;1742:56;1731:67;;1676:128;;;:::o;1810:122::-;1883:24;1901:5;1883:24;:::i;:::-;1876:5;1873:35;1863:63;;1922:1;1919;1912:12;1863:63;1810:122;:::o;1938:126::-;1975:7;2015:42;2008:5;2004:54;1993:65;;1938:126;;;:::o;2070:96::-;2107:7;2136:24;2154:5;2136:24;:::i;:::-;2125:35;;2070:96;;;:::o;2172:181::-;2218:5;2256:6;2243:20;2234:29;;2272:33;2299:5;2272:33;:::i;:::-;2323:24;2341:5;2323:24;:::i;:::-;2314:33;;2172:181;;;;:::o;2359:77::-;2396:7;2425:5;2414:16;;2359:77;;;:::o;2442:122::-;2515:24;2533:5;2515:24;:::i;:::-;2508:5;2505:35;2495:63;;2554:1;2551;2544:12;2495:63;2442:122;:::o;2570:139::-;2616:5;2654:6;2641:20;2632:29;;2670:33;2697:5;2670:33;:::i;:::-;2570:139;;;;:::o;2715:474::-;2783:6;2791;2840:2;2828:9;2819:7;2815:23;2811:32;2808:119;;;2846:79;;:::i;:::-;2808:119;2966:1;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2937:117;3093:2;3119:53;3164:7;3155:6;3144:9;3140:22;3119:53;:::i;:::-;3109:63;;3064:118;2715:474;;;;;:::o;3195:90::-;3229:7;3272:5;3265:13;3258:21;3247:32;;3195:90;;;:::o;3291:109::-;3372:21;3387:5;3372:21;:::i;:::-;3367:3;3360:34;3291:109;;:::o;3406:210::-;3493:4;3531:2;3520:9;3516:18;3508:26;;3544:65;3606:1;3595:9;3591:17;3582:6;3544:65;:::i;:::-;3406:210;;;;:::o;3622:118::-;3709:24;3727:5;3709:24;:::i;:::-;3704:3;3697:37;3622:118;;:::o;3746:222::-;3839:4;3877:2;3866:9;3862:18;3854:26;;3890:71;3958:1;3947:9;3943:17;3934:6;3890:71;:::i;:::-;3746:222;;;;:::o;3974:117::-;4083:1;4080;4073:12;4097:117;4206:1;4203;4196:12;4220:180;4268:77;4265:1;4258:88;4365:4;4362:1;4355:15;4389:4;4386:1;4379:15;4406:281;4489:27;4511:4;4489:27;:::i;:::-;4481:6;4477:40;4619:6;4607:10;4604:22;4583:18;4571:10;4568:34;4565:62;4562:88;;;4630:18;;:::i;:::-;4562:88;4670:10;4666:2;4659:22;4449:238;4406:281;;:::o;4693:129::-;4727:6;4754:20;;:::i;:::-;4744:30;;4783:33;4811:4;4803:6;4783:33;:::i;:::-;4693:129;;;:::o;4828:308::-;4890:4;4980:18;4972:6;4969:30;4966:56;;;5002:18;;:::i;:::-;4966:56;5040:29;5062:6;5040:29;:::i;:::-;5032:37;;5124:4;5118;5114:15;5106:23;;4828:308;;;:::o;5142:146::-;5239:6;5234:3;5229;5216:30;5280:1;5271:6;5266:3;5262:16;5255:27;5142:146;;;:::o;5294:425::-;5372:5;5397:66;5413:49;5455:6;5413:49;:::i;:::-;5397:66;:::i;:::-;5388:75;;5486:6;5479:5;5472:21;5524:4;5517:5;5513:16;5562:3;5553:6;5548:3;5544:16;5541:25;5538:112;;;5569:79;;:::i;:::-;5538:112;5659:54;5706:6;5701:3;5696;5659:54;:::i;:::-;5378:341;5294:425;;;;;:::o;5739:340::-;5795:5;5844:3;5837:4;5829:6;5825:17;5821:27;5811:122;;5852:79;;:::i;:::-;5811:122;5969:6;5956:20;5994:79;6069:3;6061:6;6054:4;6046:6;6042:17;5994:79;:::i;:::-;5985:88;;5801:278;5739:340;;;;:::o;6085:509::-;6154:6;6203:2;6191:9;6182:7;6178:23;6174:32;6171:119;;;6209:79;;:::i;:::-;6171:119;6357:1;6346:9;6342:17;6329:31;6387:18;6379:6;6376:30;6373:117;;;6409:79;;:::i;:::-;6373:117;6514:63;6569:7;6560:6;6549:9;6545:22;6514:63;:::i;:::-;6504:73;;6300:287;6085:509;;;;:::o;6600:619::-;6677:6;6685;6693;6742:2;6730:9;6721:7;6717:23;6713:32;6710:119;;;6748:79;;:::i;:::-;6710:119;6868:1;6893:53;6938:7;6929:6;6918:9;6914:22;6893:53;:::i;:::-;6883:63;;6839:117;6995:2;7021:53;7066:7;7057:6;7046:9;7042:22;7021:53;:::i;:::-;7011:63;;6966:118;7123:2;7149:53;7194:7;7185:6;7174:9;7170:22;7149:53;:::i;:::-;7139:63;;7094:118;6600:619;;;;;:::o;7225:86::-;7260:7;7300:4;7293:5;7289:16;7278:27;;7225:86;;;:::o;7317:112::-;7400:22;7416:5;7400:22;:::i;:::-;7395:3;7388:35;7317:112;;:::o;7435:214::-;7524:4;7562:2;7551:9;7547:18;7539:26;;7575:67;7639:1;7628:9;7624:17;7615:6;7575:67;:::i;:::-;7435:214;;;;:::o;7655:329::-;7714:6;7763:2;7751:9;7742:7;7738:23;7734:32;7731:119;;;7769:79;;:::i;:::-;7731:119;7889:1;7914:53;7959:7;7950:6;7939:9;7935:22;7914:53;:::i;:::-;7904:63;;7860:117;7655:329;;;;:::o;7990:118::-;8077:24;8095:5;8077:24;:::i;:::-;8072:3;8065:37;7990:118;;:::o;8114:222::-;8207:4;8245:2;8234:9;8230:18;8222:26;;8258:71;8326:1;8315:9;8311:17;8302:6;8258:71;:::i;:::-;8114:222;;;;:::o;8342:76::-;8378:7;8407:5;8396:16;;8342:76;;;:::o;8424:115::-;8509:23;8526:5;8509:23;:::i;:::-;8504:3;8497:36;8424:115;;:::o;8545:218::-;8636:4;8674:2;8663:9;8659:18;8651:26;;8687:69;8753:1;8742:9;8738:17;8729:6;8687:69;:::i;:::-;8545:218;;;;:::o;8769:474::-;8837:6;8845;8894:2;8882:9;8873:7;8869:23;8865:32;8862:119;;;8900:79;;:::i;:::-;8862:119;9020:1;9045:53;9090:7;9081:6;9070:9;9066:22;9045:53;:::i;:::-;9035:63;;8991:117;9147:2;9173:53;9218:7;9209:6;9198:9;9194:22;9173:53;:::i;:::-;9163:63;;9118:118;8769:474;;;;;:::o;9249:180::-;9297:77;9294:1;9287:88;9394:4;9391:1;9384:15;9418:4;9415:1;9408:15;9435:320;9479:6;9516:1;9510:4;9506:12;9496:22;;9563:1;9557:4;9553:12;9584:18;9574:81;;9640:4;9632:6;9628:17;9618:27;;9574:81;9702:2;9694:6;9691:14;9671:18;9668:38;9665:84;;9721:18;;:::i;:::-;9665:84;9486:269;9435:320;;;:::o;9761:163::-;9901:15;9897:1;9889:6;9885:14;9878:39;9761:163;:::o;9930:366::-;10072:3;10093:67;10157:2;10152:3;10093:67;:::i;:::-;10086:74;;10169:93;10258:3;10169:93;:::i;:::-;10287:2;10282:3;10278:12;10271:19;;9930:366;;;:::o;10302:419::-;10468:4;10506:2;10495:9;10491:18;10483:26;;10555:9;10549:4;10545:20;10541:1;10530:9;10526:17;10519:47;10583:131;10709:4;10583:131;:::i;:::-;10575:139;;10302:419;;;:::o;10727:141::-;10776:4;10799:3;10791:11;;10822:3;10819:1;10812:14;10856:4;10853:1;10843:18;10835:26;;10727:141;;;:::o;10874:93::-;10911:6;10958:2;10953;10946:5;10942:14;10938:23;10928:33;;10874:93;;;:::o;10973:107::-;11017:8;11067:5;11061:4;11057:16;11036:37;;10973:107;;;;:::o;11086:393::-;11155:6;11205:1;11193:10;11189:18;11228:97;11258:66;11247:9;11228:97;:::i;:::-;11346:39;11376:8;11365:9;11346:39;:::i;:::-;11334:51;;11418:4;11414:9;11407:5;11403:21;11394:30;;11467:4;11457:8;11453:19;11446:5;11443:30;11433:40;;11162:317;;11086:393;;;;;:::o;11485:60::-;11513:3;11534:5;11527:12;;11485:60;;;:::o;11551:142::-;11601:9;11634:53;11652:34;11661:24;11679:5;11661:24;:::i;:::-;11652:34;:::i;:::-;11634:53;:::i;:::-;11621:66;;11551:142;;;:::o;11699:75::-;11742:3;11763:5;11756:12;;11699:75;;;:::o;11780:269::-;11890:39;11921:7;11890:39;:::i;:::-;11951:91;12000:41;12024:16;12000:41;:::i;:::-;11992:6;11985:4;11979:11;11951:91;:::i;:::-;11945:4;11938:105;11856:193;11780:269;;;:::o;12055:73::-;12100:3;12055:73;:::o;12134:189::-;12211:32;;:::i;:::-;12252:65;12310:6;12302;12296:4;12252:65;:::i;:::-;12187:136;12134:189;;:::o;12329:186::-;12389:120;12406:3;12399:5;12396:14;12389:120;;;12460:39;12497:1;12490:5;12460:39;:::i;:::-;12433:1;12426:5;12422:13;12413:22;;12389:120;;;12329:186;;:::o;12521:543::-;12622:2;12617:3;12614:11;12611:446;;;12656:38;12688:5;12656:38;:::i;:::-;12740:29;12758:10;12740:29;:::i;:::-;12730:8;12726:44;12923:2;12911:10;12908:18;12905:49;;;12944:8;12929:23;;12905:49;12967:80;13023:22;13041:3;13023:22;:::i;:::-;13013:8;13009:37;12996:11;12967:80;:::i;:::-;12626:431;;12611:446;12521:543;;;:::o;13070:117::-;13124:8;13174:5;13168:4;13164:16;13143:37;;13070:117;;;;:::o;13193:169::-;13237:6;13270:51;13318:1;13314:6;13306:5;13303:1;13299:13;13270:51;:::i;:::-;13266:56;13351:4;13345;13341:15;13331:25;;13244:118;13193:169;;;;:::o;13367:295::-;13443:4;13589:29;13614:3;13608:4;13589:29;:::i;:::-;13581:37;;13651:3;13648:1;13644:11;13638:4;13635:21;13627:29;;13367:295;;;;:::o;13667:1395::-;13784:37;13817:3;13784:37;:::i;:::-;13886:18;13878:6;13875:30;13872:56;;;13908:18;;:::i;:::-;13872:56;13952:38;13984:4;13978:11;13952:38;:::i;:::-;14037:67;14097:6;14089;14083:4;14037:67;:::i;:::-;14131:1;14155:4;14142:17;;14187:2;14179:6;14176:14;14204:1;14199:618;;;;14861:1;14878:6;14875:77;;;14927:9;14922:3;14918:19;14912:26;14903:35;;14875:77;14978:67;15038:6;15031:5;14978:67;:::i;:::-;14972:4;14965:81;14834:222;14169:887;;14199:618;14251:4;14247:9;14239:6;14235:22;14285:37;14317:4;14285:37;:::i;:::-;14344:1;14358:208;14372:7;14369:1;14366:14;14358:208;;;14451:9;14446:3;14442:19;14436:26;14428:6;14421:42;14502:1;14494:6;14490:14;14480:24;;14549:2;14538:9;14534:18;14521:31;;14395:4;14392:1;14388:12;14383:17;;14358:208;;;14594:6;14585:7;14582:19;14579:179;;;14652:9;14647:3;14643:19;14637:26;14695:48;14737:4;14729:6;14725:17;14714:9;14695:48;:::i;:::-;14687:6;14680:64;14602:156;14579:179;14804:1;14800;14792:6;14788:14;14784:22;14778:4;14771:36;14206:611;;;14169:887;;13759:1303;;;13667:1395;;:::o;15068:105::-;15104:7;15144:22;15137:5;15133:34;15122:45;;15068:105;;;:::o;15179:120::-;15251:23;15268:5;15251:23;:::i;:::-;15244:5;15241:34;15231:62;;15289:1;15286;15279:12;15231:62;15179:120;:::o;15305:141::-;15361:5;15392:6;15386:13;15377:22;;15408:32;15434:5;15408:32;:::i;:::-;15305:141;;;;:::o;15452:120::-;15524:23;15541:5;15524:23;:::i;:::-;15517:5;15514:34;15504:62;;15562:1;15559;15552:12;15504:62;15452:120;:::o;15578:141::-;15634:5;15665:6;15659:13;15650:22;;15681:32;15707:5;15681:32;:::i;:::-;15578:141;;;;:::o;15725:143::-;15782:5;15813:6;15807:13;15798:22;;15829:33;15856:5;15829:33;:::i;:::-;15725:143;;;;:::o;15874:971::-;15977:6;15985;15993;16001;16009;16058:3;16046:9;16037:7;16033:23;16029:33;16026:120;;;16065:79;;:::i;:::-;16026:120;16185:1;16210:63;16265:7;16256:6;16245:9;16241:22;16210:63;:::i;:::-;16200:73;;16156:127;16322:2;16348:63;16403:7;16394:6;16383:9;16379:22;16348:63;:::i;:::-;16338:73;;16293:128;16460:2;16486:64;16542:7;16533:6;16522:9;16518:22;16486:64;:::i;:::-;16476:74;;16431:129;16599:2;16625:64;16681:7;16672:6;16661:9;16657:22;16625:64;:::i;:::-;16615:74;;16570:129;16738:3;16765:63;16820:7;16811:6;16800:9;16796:22;16765:63;:::i;:::-;16755:73;;16709:129;15874:971;;;;;;;;:::o;16851:442::-;17000:4;17038:2;17027:9;17023:18;17015:26;;17051:71;17119:1;17108:9;17104:17;17095:6;17051:71;:::i;:::-;17132:72;17200:2;17189:9;17185:18;17176:6;17132:72;:::i;:::-;17214;17282:2;17271:9;17267:18;17258:6;17214:72;:::i;:::-;16851:442;;;;;;:::o;17299:180::-;17347:77;17344:1;17337:88;17444:4;17441:1;17434:15;17468:4;17465:1;17458:15;17485:191;17525:3;17544:20;17562:1;17544:20;:::i;:::-;17539:25;;17578:20;17596:1;17578:20;:::i;:::-;17573:25;;17621:1;17618;17614:9;17607:16;;17642:3;17639:1;17636:10;17633:36;;;17649:18;;:::i;:::-;17633:36;17485:191;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\n// Імпорт необхідних бібліотек\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract TRON is ERC20, Ownable {\n    AggregatorV3Interface internal priceFeed; // Інтерфейс для отримання ціни з Chainlink\n    uint256 public tokenPrice; // Ціна токену в USD (або іншій валюті)\n    string private tokenImageURL; // URL зображення токену\n\n    // Конструктор контракту\n    constructor() ERC20(\"USDTALEX\", \"TRX\") Ownable(msg.sender) {\n        tokenPrice = 1 * 10**18; // Початкова ціна токену (наприклад, 1 USD)\n        priceFeed = AggregatorV3Interface(0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419); // Адреса Chainlink Oracle (замініть на реальну)\n        _mint(msg.sender, 1000000 * 10**decimals()); // Мінт початкової кількості токенів\n    }\n\n    // Функція для оновлення ціни токену з Chainlink\n    function updateTokenPrice() public {\n        int price = getPrice(); // Отримання ціни з Chainlink\n        require(price > 0, \"Invalid price\"); // Перевірка, що ціна коректна\n        tokenPrice = uint256(price); // Оновлення ціни токену\n    }\n\n    // Функція для отримання ціни з Chainlink\n    function getPrice() public view returns (int) {\n        (\n            /* uint80 roundID */,\n            int price,\n            /* uint startedAt */,\n            /* uint timeStamp */,\n            /* uint80 answeredInRound */\n        ) = priceFeed.latestRoundData(); // Отримання даних з Oracle\n        return price;\n    }\n\n    // Функція для встановлення URL зображення токену (тільки для власника)\n    function setTokenImageURL(string memory _url) public onlyOwner {\n        tokenImageURL = _url;\n    }\n\n    // Функція для отримання URL зображення токену\n    function getTokenImageURL() public view returns (string memory) {\n        return tokenImageURL;\n    }\n}\n",
  "sourcePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/Tether USD (USDT).sol",
  "ast": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/Tether USD (USDT).sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        287
      ],
      "Context": [
        1221
      ],
      "ERC20": [
        1087
      ],
      "IERC20": [
        1165
      ],
      "IERC20Errors": [
        477
      ],
      "IERC20Metadata": [
        1191
      ],
      "Ownable": [
        435
      ],
      "TRON": [
        241
      ]
    },
    "id": 242,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 132,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 1088,
        "src": "113:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 134,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 288,
        "src": "169:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 135,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 436,
        "src": "246:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "ERC20",
              "nameLocations": [
                "317:5:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1087,
              "src": "317:5:1"
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "317:5:1"
          },
          {
            "baseName": {
              "id": 138,
              "name": "Ownable",
              "nameLocations": [
                "324:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 435,
              "src": "324:7:1"
            },
            "id": 139,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:1"
          }
        ],
        "canonicalName": "TRON",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          435,
          1087,
          477,
          1191,
          1165,
          1221
        ],
        "name": "TRON",
        "nameLocation": "309:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 142,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "369:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "338:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 141,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 140,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "338:21:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 287,
                "src": "338:21:1"
              },
              "referencedDeclaration": 287,
              "src": "338:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "7ff9b596",
            "id": 144,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "469:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "454:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 146,
            "mutability": "mutable",
            "name": "tokenImageURL",
            "nameLocation": "565:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "550:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 145,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "550:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "734:391:1",
              "statements": [
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "744:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "765:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "761:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "757:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "744:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "744:23:1"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "849:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "883:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 166,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "861:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$287_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:65:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "849:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "849:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1014:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1018:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1014:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1026:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1036:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 176,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "1040:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1040:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1036:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1026:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 171,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "1008:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:43:1"
                }
              ]
            },
            "id": 183,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "55534454414c4558",
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "695:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245204ab88cf973702995cb549169597e1e84fab0ecd4706a26363d3150d5e10",
                      "typeString": "literal_string \"USDTALEX\""
                    },
                    "value": "USDTALEX"
                  },
                  {
                    "hexValue": "545258",
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_89e00465fb83774b035e591ad1577585bbb47b9ee6745a0ef8052c9623fc55ac",
                      "typeString": "literal_string \"TRX\""
                    },
                    "value": "TRX"
                  }
                ],
                "id": 151,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 148,
                  "name": "ERC20",
                  "nameLocations": [
                    "689:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1087,
                  "src": "689:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "689:24:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 153,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "722:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "726:6:1",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "722:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 155,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 152,
                  "name": "Ownable",
                  "nameLocations": [
                    "714:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 435,
                  "src": "714:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "714:19:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:1"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:1"
            },
            "scope": 241,
            "src": "675:450:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1249:263:1",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1263:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "1259:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 188,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "1271:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 192,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "1343:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1351:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1343:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207072696365",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1354:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        },
                        "value": "Invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1335:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:35:1"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1434:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 201,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "1455:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1447:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1447:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:27:1"
                }
              ]
            },
            "functionSelector": "0790c537",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenPrice",
            "nameLocation": "1223:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:1"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:1"
            },
            "scope": 241,
            "src": "1214:298:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "1634:289:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    212,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1696:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 219,
                      "src": "1692:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 216,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 213,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1824:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1834:15:1",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "1824:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1644:207:1"
                },
                {
                  "expression": {
                    "id": 217,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "1911:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 210,
                  "id": 218,
                  "nodeType": "Return",
                  "src": "1904:12:1"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1597:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:1"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "1629:3:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:5:1"
            },
            "scope": 241,
            "src": "1588:335:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2123:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 227,
                      "name": "tokenImageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2133:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "_url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2149:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2133:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:20:1"
                }
              ]
            },
            "functionSelector": "1c8c3324",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 224,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2113:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 346,
                  "src": "2113:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2113:9:1"
              }
            ],
            "name": "setTokenImageURL",
            "nameLocation": "2069:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_url",
                  "nameLocation": "2100:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "2086:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:20:1"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2123:0:1"
            },
            "scope": 241,
            "src": "2060:100:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2316:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "name": "tokenImageURL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "2333:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 236,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "2326:20:1"
                }
              ]
            },
            "functionSelector": "c71473e7",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenImageURL",
            "nameLocation": "2261:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:2:1"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2301:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:15:1"
            },
            "scope": 241,
            "src": "2252:101:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "300:2055:1",
        "usedErrors": [
          301,
          306,
          447,
          452,
          457,
          466,
          471,
          476
        ],
        "usedEvents": [
          312,
          1099,
          1108
        ]
      }
    ],
    "src": "32:2324:1"
  },
  "legacyAST": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/Tether USD (USDT).sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        287
      ],
      "Context": [
        1221
      ],
      "ERC20": [
        1087
      ],
      "IERC20": [
        1165
      ],
      "IERC20Errors": [
        477
      ],
      "IERC20Metadata": [
        1191
      ],
      "Ownable": [
        435
      ],
      "TRON": [
        241
      ]
    },
    "id": 242,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 132,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 133,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 1088,
        "src": "113:55:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 134,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 288,
        "src": "169:76:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 135,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 436,
        "src": "246:52:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 136,
              "name": "ERC20",
              "nameLocations": [
                "317:5:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1087,
              "src": "317:5:1"
            },
            "id": 137,
            "nodeType": "InheritanceSpecifier",
            "src": "317:5:1"
          },
          {
            "baseName": {
              "id": 138,
              "name": "Ownable",
              "nameLocations": [
                "324:7:1"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 435,
              "src": "324:7:1"
            },
            "id": 139,
            "nodeType": "InheritanceSpecifier",
            "src": "324:7:1"
          }
        ],
        "canonicalName": "TRON",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          435,
          1087,
          477,
          1191,
          1165,
          1221
        ],
        "name": "TRON",
        "nameLocation": "309:4:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 142,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "369:9:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "338:40:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 141,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 140,
                "name": "AggregatorV3Interface",
                "nameLocations": [
                  "338:21:1"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 287,
                "src": "338:21:1"
              },
              "referencedDeclaration": 287,
              "src": "338:21:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "7ff9b596",
            "id": 144,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "469:10:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "454:25:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 143,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "454:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 146,
            "mutability": "mutable",
            "name": "tokenImageURL",
            "nameLocation": "565:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "550:28:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 145,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "550:6:1",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 182,
              "nodeType": "Block",
              "src": "734:391:1",
              "statements": [
                {
                  "expression": {
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 157,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "744:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "31",
                        "id": 158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "757:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "id": 161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "761:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "**",
                        "rightExpression": {
                          "hexValue": "3138",
                          "id": 160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "765:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "src": "761:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      },
                      "src": "757:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1000000000000000000_by_1",
                        "typeString": "int_const 1000000000000000000"
                      }
                    },
                    "src": "744:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 164,
                  "nodeType": "ExpressionStatement",
                  "src": "744:23:1"
                },
                {
                  "expression": {
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 165,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 142,
                      "src": "849:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307835663465433344663963626434333731344645323734306635453336313631353563356238343139",
                          "id": 167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "883:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 166,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 287,
                        "src": "861:21:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$287_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 168,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:65:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "849:77:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "849:77:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 172,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1014:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1018:6:1",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1014:10:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31303030303030",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1026:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 178,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 175,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1036:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 176,
                              "name": "decimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 651,
                              "src": "1040:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                "typeString": "function () view returns (uint8)"
                              }
                            },
                            "id": 177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1040:10:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "1036:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1026:24:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 171,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 927,
                      "src": "1008:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:43:1"
                }
              ]
            },
            "id": 183,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "55534454414c4558",
                    "id": 149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "695:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_245204ab88cf973702995cb549169597e1e84fab0ecd4706a26363d3150d5e10",
                      "typeString": "literal_string \"USDTALEX\""
                    },
                    "value": "USDTALEX"
                  },
                  {
                    "hexValue": "545258",
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "707:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_89e00465fb83774b035e591ad1577585bbb47b9ee6745a0ef8052c9623fc55ac",
                      "typeString": "literal_string \"TRX\""
                    },
                    "value": "TRX"
                  }
                ],
                "id": 151,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 148,
                  "name": "ERC20",
                  "nameLocations": [
                    "689:5:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1087,
                  "src": "689:5:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "689:24:1"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 153,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "722:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "726:6:1",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "722:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 155,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 152,
                  "name": "Ownable",
                  "nameLocations": [
                    "714:7:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 435,
                  "src": "714:7:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "714:19:1"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "686:2:1"
            },
            "returnParameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "734:0:1"
            },
            "scope": 241,
            "src": "675:450:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "1249:263:1",
              "statements": [
                {
                  "assignments": [
                    187
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 187,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1263:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 205,
                      "src": "1259:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 186,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1259:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 190,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 188,
                      "name": "getPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 220,
                      "src": "1271:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_int256_$",
                        "typeString": "function () view returns (int256)"
                      }
                    },
                    "id": 189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1271:10:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1259:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        },
                        "id": 194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 192,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "1343:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1351:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1343:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207072696365",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1354:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        },
                        "value": "Invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7",
                          "typeString": "literal_string \"Invalid price\""
                        }
                      ],
                      "id": 191,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1335:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:35:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 197,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:35:1"
                },
                {
                  "expression": {
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 198,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 144,
                      "src": "1434:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 201,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 187,
                          "src": "1455:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_int256",
                            "typeString": "int256"
                          }
                        ],
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1447:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1447:7:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1447:14:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1434:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "1434:27:1"
                }
              ]
            },
            "functionSelector": "0790c537",
            "id": 206,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTokenPrice",
            "nameLocation": "1223:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1239:2:1"
            },
            "returnParameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1249:0:1"
            },
            "scope": 241,
            "src": "1214:298:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 219,
              "nodeType": "Block",
              "src": "1634:289:1",
              "statements": [
                {
                  "assignments": [
                    null,
                    212,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 212,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "1696:5:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 219,
                      "src": "1692:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 211,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "1692:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 216,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 213,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 142,
                        "src": "1824:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$287",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1834:15:1",
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 286,
                      "src": "1824:25:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1644:207:1"
                },
                {
                  "expression": {
                    "id": 217,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 212,
                    "src": "1911:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "functionReturnParameters": 210,
                  "id": 218,
                  "nodeType": "Return",
                  "src": "1904:12:1"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "id": 220,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "1597:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 207,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1605:2:1"
            },
            "returnParameters": {
              "id": 210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 209,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 220,
                  "src": "1629:3:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 208,
                    "name": "int",
                    "nodeType": "ElementaryTypeName",
                    "src": "1629:3:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:5:1"
            },
            "scope": 241,
            "src": "1588:335:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 231,
              "nodeType": "Block",
              "src": "2123:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 227,
                      "name": "tokenImageURL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 146,
                      "src": "2133:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 228,
                      "name": "_url",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 222,
                      "src": "2149:4:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2133:20:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 230,
                  "nodeType": "ExpressionStatement",
                  "src": "2133:20:1"
                }
              ]
            },
            "functionSelector": "1c8c3324",
            "id": 232,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 225,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 224,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2113:9:1"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 346,
                  "src": "2113:9:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "2113:9:1"
              }
            ],
            "name": "setTokenImageURL",
            "nameLocation": "2069:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 222,
                  "mutability": "mutable",
                  "name": "_url",
                  "nameLocation": "2100:4:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 232,
                  "src": "2086:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 221,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2086:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2085:20:1"
            },
            "returnParameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2123:0:1"
            },
            "scope": 241,
            "src": "2060:100:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "2316:37:1",
              "statements": [
                {
                  "expression": {
                    "id": 237,
                    "name": "tokenImageURL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 146,
                    "src": "2333:13:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 236,
                  "id": 238,
                  "nodeType": "Return",
                  "src": "2326:20:1"
                }
              ]
            },
            "functionSelector": "c71473e7",
            "id": 240,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenImageURL",
            "nameLocation": "2261:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2277:2:1"
            },
            "returnParameters": {
              "id": 236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 235,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 240,
                  "src": "2301:13:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 234,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2301:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2300:15:1"
            },
            "scope": 241,
            "src": "2252:101:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "300:2055:1",
        "usedErrors": [
          301,
          306,
          447,
          452,
          457,
          466,
          471,
          476
        ],
        "usedEvents": [
          312,
          1099,
          1108
        ]
      }
    ],
    "src": "32:2324:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.22+commit.5ed3e10f.Emscripten.clang"
  },
  "networks": {
    "*": {
      "events": {},
      "links": {},
      "address": "418aca4ca9b4e879b5ea5e39c449368297c8619d6a",
      "transactionHash": "87b939fcf97d754fb93eb2fcaeaf2519ba3e78ccbd89fee8ab15a7af426064b9"
    }
  },
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-01-31T04:44:35.446Z"
}