{
  "contractName": "TRC20Burnable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b50611159806100355f395ff3fe608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b50600436106100b4575f3560e01c806370a082311161007c57806370a082311461018257806379cc6790146101b2578063a457c2d7146101ce578063a9059cbb146101fe578063dd62ed3e1461022e576100b4565b8063095ea7b3146100b857806318160ddd146100e857806323b872dd14610106578063395093511461013657806342966c6814610166575b5f80fd5b6100d260048036038101906100cd9190610f13565b61025e565b6040516100df9190610f6b565b60405180910390f35b6100f0610382565b6040516100fd9190610f93565b60405180910390f35b610120600480360381019061011b9190610fac565b61038b565b60405161012d9190610f6b565b60405180910390f35b610150600480360381019061014b9190610f13565b6104a9565b60405161015d9190610f6b565b60405180910390f35b610180600480360381019061017b9190610ffc565b6106cf565b005b61019c60048036038101906101979190611027565b6106dc565b6040516101a99190610f93565b60405180910390f35b6101cc60048036038101906101c79190610f13565b610721565b005b6101e860048036038101906101e39190610f13565b61072f565b6040516101f59190610f6b565b60405180910390f35b61021860048036038101906102139190610f13565b610955565b6040516102259190610f6b565b60405180910390f35b61024860048036038101906102439190611052565b61096b565b6040516102559190610f93565b60405180910390f35b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610296575f80fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103709190610f93565b60405180910390a36001905092915050565b5f600254905090565b5f6104178260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061049e848484610a13565b600190509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e1575f80fd5b61056c8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610bd290919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516106bd9190610f93565b60405180910390a36001905092915050565b6106d93382610bf8565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61072b8282610d42565b5050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610767575f80fd5b6107f28260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516109439190610f93565b60405180910390a36001905092915050565b5f610961338484610a13565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f828211156109fa575f80fd5b5f8284610a0791906110bd565b90508091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4a575f80fd5b610a99815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610b28815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610bd290919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bc59190610f93565b60405180910390a3505050565b5f808284610be091906110f0565b905083811015610bee575f80fd5b8091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c2f575f80fd5b610c44816002546109ed90919063ffffffff16565b600281905550610c99815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d369190610f93565b60405180910390a35050565b610dcd8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e538282610bf8565b5050565b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b610e8481610e5b565b8114610e8e575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eba82610e91565b9050919050565b5f81359050610ecf81610e7b565b610ed881610eb0565b905092915050565b5f819050919050565b610ef281610ee0565b8114610efc575f80fd5b50565b5f81359050610f0d81610ee9565b92915050565b5f8060408385031215610f2957610f28610e57565b5b5f610f3685828601610ec1565b9250506020610f4785828601610eff565b9150509250929050565b5f8115159050919050565b610f6581610f51565b82525050565b5f602082019050610f7e5f830184610f5c565b92915050565b610f8d81610ee0565b82525050565b5f602082019050610fa65f830184610f84565b92915050565b5f805f60608486031215610fc357610fc2610e57565b5b5f610fd086828701610ec1565b9350506020610fe186828701610ec1565b9250506040610ff286828701610eff565b9150509250925092565b5f6020828403121561101157611010610e57565b5b5f61101e84828501610eff565b91505092915050565b5f6020828403121561103c5761103b610e57565b5b5f61104984828501610ec1565b91505092915050565b5f806040838503121561106857611067610e57565b5b5f61107585828601610ec1565b925050602061108685828601610ec1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110c782610ee0565b91506110d283610ee0565b92508282039050818111156110ea576110e9611090565b5b92915050565b5f6110fa82610ee0565b915061110583610ee0565b925082820190508082111561111d5761111c611090565b5b9291505056fea26474726f6e5822122041c49be52318c908b78c3303f9aca1df4fa9fd84e02a719f5b67125f0d771ede64736f6c63430008160033",
  "deployedBytecode": "0x608060405234801561000f575f80fd5b50d3801561001b575f80fd5b50d28015610027575f80fd5b50600436106100b4575f3560e01c806370a082311161007c57806370a082311461018257806379cc6790146101b2578063a457c2d7146101ce578063a9059cbb146101fe578063dd62ed3e1461022e576100b4565b8063095ea7b3146100b857806318160ddd146100e857806323b872dd14610106578063395093511461013657806342966c6814610166575b5f80fd5b6100d260048036038101906100cd9190610f13565b61025e565b6040516100df9190610f6b565b60405180910390f35b6100f0610382565b6040516100fd9190610f93565b60405180910390f35b610120600480360381019061011b9190610fac565b61038b565b60405161012d9190610f6b565b60405180910390f35b610150600480360381019061014b9190610f13565b6104a9565b60405161015d9190610f6b565b60405180910390f35b610180600480360381019061017b9190610ffc565b6106cf565b005b61019c60048036038101906101979190611027565b6106dc565b6040516101a99190610f93565b60405180910390f35b6101cc60048036038101906101c79190610f13565b610721565b005b6101e860048036038101906101e39190610f13565b61072f565b6040516101f59190610f6b565b60405180910390f35b61021860048036038101906102139190610f13565b610955565b6040516102259190610f6b565b60405180910390f35b61024860048036038101906102439190611052565b61096b565b6040516102559190610f93565b60405180910390f35b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610296575f80fd5b8160015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516103709190610f93565b60405180910390a36001905092915050565b5f600254905090565b5f6104178260015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061049e848484610a13565b600190509392505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e1575f80fd5b61056c8260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610bd290919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516106bd9190610f93565b60405180910390a36001905092915050565b6106d93382610bf8565b50565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61072b8282610d42565b5050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610767575f80fd5b6107f28260015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560015f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516109439190610f93565b60405180910390a36001905092915050565b5f610961338484610a13565b6001905092915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f828211156109fa575f80fd5b5f8284610a0791906110bd565b90508091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a4a575f80fd5b610a99815f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b5f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610b28815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610bd290919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610bc59190610f93565b60405180910390a3505050565b5f808284610be091906110f0565b905083811015610bee575f80fd5b8091505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c2f575f80fd5b610c44816002546109ed90919063ffffffff16565b600281905550610c99815f808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b5f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d369190610f93565b60405180910390a35050565b610dcd8160015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546109ed90919063ffffffff16565b60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610e538282610bf8565b5050565b5f80fd5b5f74ffffffffffffffffffffffffffffffffffffffffff82169050919050565b610e8481610e5b565b8114610e8e575f80fd5b50565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610eba82610e91565b9050919050565b5f81359050610ecf81610e7b565b610ed881610eb0565b905092915050565b5f819050919050565b610ef281610ee0565b8114610efc575f80fd5b50565b5f81359050610f0d81610ee9565b92915050565b5f8060408385031215610f2957610f28610e57565b5b5f610f3685828601610ec1565b9250506020610f4785828601610eff565b9150509250929050565b5f8115159050919050565b610f6581610f51565b82525050565b5f602082019050610f7e5f830184610f5c565b92915050565b610f8d81610ee0565b82525050565b5f602082019050610fa65f830184610f84565b92915050565b5f805f60608486031215610fc357610fc2610e57565b5b5f610fd086828701610ec1565b9350506020610fe186828701610ec1565b9250506040610ff286828701610eff565b9150509250925092565b5f6020828403121561101157611010610e57565b5b5f61101e84828501610eff565b91505092915050565b5f6020828403121561103c5761103b610e57565b5b5f61104984828501610ec1565b91505092915050565b5f806040838503121561106857611067610e57565b5b5f61107585828601610ec1565b925050602061108685828601610ec1565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6110c782610ee0565b91506110d283610ee0565b92508282039050818111156110ea576110e9611090565b5b92915050565b5f6110fa82610ee0565b915061110583610ee0565b925082820190508082111561111d5761111c611090565b5b9291505056fea26474726f6e5822122041c49be52318c908b78c3303f9aca1df4fa9fd84e02a719f5b67125f0d771ede64736f6c63430008160033",
  "sourceMap": "141:579:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "141:579:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:238:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;721:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:267;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3828:362;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:77:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1023:104:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;625:93:5;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4666:372:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1793:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1458:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:238;2631:4;2674:1;2655:21;;:7;:21;;;2647:30;;;;;;2720:5;2688:8;:20;2697:10;2688:20;;;;;;;;;;;;;;;:29;2709:7;2688:29;;;;;;;;;;;;;;;:37;;;;2761:7;2740:36;;2749:10;2740:36;;;2770:5;2740:36;;;;;;:::i;:::-;;;;;;;;2793:4;2786:11;;2566:238;;;;:::o;721:89::-;765:7;791:12;;784:19;;721:89;:::o;3090:267::-;3207:4;3256:37;3287:5;3256:8;:14;3265:4;3256:14;;;;;;;;;;;;;;;:26;3271:10;3256:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;3227:8;:14;3236:4;3227:14;;;;;;;;;;;;;;;:26;3242:10;3227:26;;;;;;;;;;;;;;;:66;;;;3303:26;3313:4;3319:2;3323:5;3303:9;:26::i;:::-;3346:4;3339:11;;3090:267;;;;;:::o;3828:362::-;3938:4;3985:1;3966:21;;:7;:21;;;3958:30;;;;;;4041:45;4075:10;4041:8;:20;4050:10;4041:20;;;;;;;;;;;;;;;:29;4062:7;4041:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;3999:8;:20;4008:10;3999:20;;;;;;;;;;;;;;;:29;4020:7;3999:29;;;;;;;;;;;;;;;:88;;;;4123:7;4102:60;;4111:10;4102:60;;;4132:8;:20;4141:10;4132:20;;;;;;;;;;;;;;;:29;4153:7;4132:29;;;;;;;;;;;;;;;;4102:60;;;;;;:::i;:::-;;;;;;;;4179:4;4172:11;;3828:362;;;;:::o;296:77:5:-;342:24;348:10;360:5;342;:24::i;:::-;296:77;:::o;1023:104:4:-;1078:7;1104:9;:16;1114:5;1104:16;;;;;;;;;;;;;;;;1097:23;;1023:104;;;:::o;625:93:5:-;689:22;699:4;705:5;689:9;:22::i;:::-;625:93;;:::o;4666:372:4:-;4781:4;4828:1;4809:21;;:7;:21;;;4801:30;;;;;;4884:50;4918:15;4884:8;:20;4893:10;4884:20;;;;;;;;;;;;;;;:29;4905:7;4884:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;4842:8;:20;4851:10;4842:20;;;;;;;;;;;;;;;:29;4863:7;4842:29;;;;;;;;;;;;;;;:93;;;;4971:7;4950:60;;4959:10;4950:60;;;4980:8;:20;4989:10;4980:20;;;;;;;;;;;;;;;:29;5001:7;4980:29;;;;;;;;;;;;;;;;4950:60;;;;;;:::i;:::-;;;;;;;;5027:4;5020:11;;4666:372;;;;:::o;1793:137::-;1854:4;1870:32;1880:10;1892:2;1896:5;1870:9;:32::i;:::-;1919:4;1912:11;;1793:137;;;;:::o;1458:167::-;1564:7;1594:8;:15;1603:5;1594:15;;;;;;;;;;;;;;;:24;1610:7;1594:24;;;;;;;;;;;;;;;;1587:31;;1458:167;;;;:::o;1198:145:13:-;1256:7;1288:1;1283;:6;;1275:15;;;;;;1300:9;1316:1;1312;:5;;;;:::i;:::-;1300:17;;1335:1;1328:8;;;1198:145;;;;:::o;5257:256:4:-;5358:1;5344:16;;:2;:16;;;5336:25;;;;;;5390:26;5410:5;5390:9;:15;5400:4;5390:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;5372:9;:15;5382:4;5372:15;;;;;;;;;;;;;;;:44;;;;5442:24;5460:5;5442:9;:13;5452:2;5442:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;5426:9;:13;5436:2;5426:13;;;;;;;;;;;;;;;:40;;;;5496:2;5481:25;;5490:4;5481:25;;;5500:5;5481:25;;;;;;:::i;:::-;;;;;;;;5257:256;;;:::o;1416:145:13:-;1474:7;1493:9;1509:1;1505;:5;;;;:::i;:::-;1493:17;;1533:1;1528;:6;;1520:15;;;;;;1553:1;1546:8;;;1416:145;;;;:::o;6353:263:4:-;6446:1;6427:21;;:7;:21;;;6419:30;;;;;;6475:23;6492:5;6475:12;;:16;;:23;;;;:::i;:::-;6460:12;:38;;;;6529:29;6552:5;6529:9;:18;6539:7;6529:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;6508:9;:18;6518:7;6508:18;;;;;;;;;;;;;;;:50;;;;6599:1;6573:36;;6582:7;6573:36;;;6603:5;6573:36;;;;;;:::i;:::-;;;;;;;;6353:263;;:::o;6938:180::-;7040:40;7074:5;7040:8;:17;7049:7;7040:17;;;;;;;;;;;;;;;:29;7058:10;7040:29;;;;;;;;;;;;;;;;:33;;:40;;;;:::i;:::-;7008:8;:17;7017:7;7008:17;;;;;;;;;;;;;;;:29;7026:10;7008:29;;;;;;;;;;;;;;;:72;;;;7090:21;7096:7;7105:5;7090;:21::i;:::-;6938:180;;:::o;88:117:21:-;197:1;194;187:12;334:128;371:7;411:44;404:5;400:56;389:67;;334:128;;;:::o;468:122::-;541:24;559:5;541:24;:::i;:::-;534:5;531:35;521:63;;580:1;577;570:12;521:63;468:122;:::o;596:126::-;633:7;673:42;666:5;662:54;651:65;;596:126;;;:::o;728:96::-;765:7;794:24;812:5;794:24;:::i;:::-;783:35;;728:96;;;:::o;830:181::-;876:5;914:6;901:20;892:29;;930:33;957:5;930:33;:::i;:::-;981:24;999:5;981:24;:::i;:::-;972:33;;830:181;;;;:::o;1017:77::-;1054:7;1083:5;1072:16;;1017:77;;;:::o;1100:122::-;1173:24;1191:5;1173:24;:::i;:::-;1166:5;1163:35;1153:63;;1212:1;1209;1202:12;1153:63;1100:122;:::o;1228:139::-;1274:5;1312:6;1299:20;1290:29;;1328:33;1355:5;1328:33;:::i;:::-;1228:139;;;;:::o;1373:474::-;1441:6;1449;1498:2;1486:9;1477:7;1473:23;1469:32;1466:119;;;1504:79;;:::i;:::-;1466:119;1624:1;1649:53;1694:7;1685:6;1674:9;1670:22;1649:53;:::i;:::-;1639:63;;1595:117;1751:2;1777:53;1822:7;1813:6;1802:9;1798:22;1777:53;:::i;:::-;1767:63;;1722:118;1373:474;;;;;:::o;1853:90::-;1887:7;1930:5;1923:13;1916:21;1905:32;;1853:90;;;:::o;1949:109::-;2030:21;2045:5;2030:21;:::i;:::-;2025:3;2018:34;1949:109;;:::o;2064:210::-;2151:4;2189:2;2178:9;2174:18;2166:26;;2202:65;2264:1;2253:9;2249:17;2240:6;2202:65;:::i;:::-;2064:210;;;;:::o;2280:118::-;2367:24;2385:5;2367:24;:::i;:::-;2362:3;2355:37;2280:118;;:::o;2404:222::-;2497:4;2535:2;2524:9;2520:18;2512:26;;2548:71;2616:1;2605:9;2601:17;2592:6;2548:71;:::i;:::-;2404:222;;;;:::o;2632:619::-;2709:6;2717;2725;2774:2;2762:9;2753:7;2749:23;2745:32;2742:119;;;2780:79;;:::i;:::-;2742:119;2900:1;2925:53;2970:7;2961:6;2950:9;2946:22;2925:53;:::i;:::-;2915:63;;2871:117;3027:2;3053:53;3098:7;3089:6;3078:9;3074:22;3053:53;:::i;:::-;3043:63;;2998:118;3155:2;3181:53;3226:7;3217:6;3206:9;3202:22;3181:53;:::i;:::-;3171:63;;3126:118;2632:619;;;;;:::o;3257:329::-;3316:6;3365:2;3353:9;3344:7;3340:23;3336:32;3333:119;;;3371:79;;:::i;:::-;3333:119;3491:1;3516:53;3561:7;3552:6;3541:9;3537:22;3516:53;:::i;:::-;3506:63;;3462:117;3257:329;;;;:::o;3592:::-;3651:6;3700:2;3688:9;3679:7;3675:23;3671:32;3668:119;;;3706:79;;:::i;:::-;3668:119;3826:1;3851:53;3896:7;3887:6;3876:9;3872:22;3851:53;:::i;:::-;3841:63;;3797:117;3592:329;;;;:::o;3927:474::-;3995:6;4003;4052:2;4040:9;4031:7;4027:23;4023:32;4020:119;;;4058:79;;:::i;:::-;4020:119;4178:1;4203:53;4248:7;4239:6;4228:9;4224:22;4203:53;:::i;:::-;4193:63;;4149:117;4305:2;4331:53;4376:7;4367:6;4356:9;4352:22;4331:53;:::i;:::-;4321:63;;4276:118;3927:474;;;;;:::o;4407:180::-;4455:77;4452:1;4445:88;4552:4;4549:1;4542:15;4576:4;4573:1;4566:15;4593:194;4633:4;4653:20;4671:1;4653:20;:::i;:::-;4648:25;;4687:20;4705:1;4687:20;:::i;:::-;4682:25;;4731:1;4728;4724:9;4716:17;;4755:1;4749:4;4746:11;4743:37;;;4760:18;;:::i;:::-;4743:37;4593:194;;;;:::o;4793:191::-;4833:3;4852:20;4870:1;4852:20;:::i;:::-;4847:25;;4886:20;4904:1;4886:20;:::i;:::-;4881:25;;4929:1;4926;4922:9;4915:16;;4950:3;4947:1;4944:10;4941:36;;;4957:18;;:::i;:::-;4941:36;4793:191;;;;:::o",
  "source": "pragma solidity ^0.8.0;\n\n\nimport \"./TRC20.sol\";\n\n/**\n * @title Burnable Token\n * @dev Token that can be irreversibly burned (destroyed).\n */\ncontract TRC20Burnable is TRC20 {\n    /**\n     * @dev Burns a specific amount of tokens.\n     * @param value The amount of token to be burned.\n     */\n    function burn(uint256 value) public {\n        _burn(msg.sender, value);\n    }\n\n    /**\n     * @dev Burns a specific amount of tokens from the target address and decrements allowance\n     * @param from address The address which you want to send tokens from\n     * @param value uint256 The amount of token to be burned\n     */\n    function burnFrom(address from, uint256 value) public {\n        _burnFrom(from, value);\n    }\n}\n",
  "sourcePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Burnable.sol",
  "ast": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Burnable.sol",
    "exportedSymbols": {
      "ITRC20": [
        340
      ],
      "SafeMath": [
        1631
      ],
      "TRC20": [
        771
      ],
      "TRC20Burnable": [
        805
      ]
    },
    "id": 806,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 773,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20.sol",
        "file": "./TRC20.sol",
        "id": 774,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 806,
        "sourceUnit": 772,
        "src": "26:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 776,
              "name": "TRC20",
              "nameLocations": [
                "167:5:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 771,
              "src": "167:5:5"
            },
            "id": 777,
            "nodeType": "InheritanceSpecifier",
            "src": "167:5:5"
          }
        ],
        "canonicalName": "TRC20Burnable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 775,
          "nodeType": "StructuredDocumentation",
          "src": "49:91:5",
          "text": " @title Burnable Token\n @dev Token that can be irreversibly burned (destroyed)."
        },
        "fullyImplemented": true,
        "id": 805,
        "linearizedBaseContracts": [
          805,
          771,
          340
        ],
        "name": "TRC20Burnable",
        "nameLocation": "150:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "332:41:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "348:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "352:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "348:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 786,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "360:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 783,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "342:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "342:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "342:24:5"
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "179:112:5",
              "text": " @dev Burns a specific amount of tokens.\n @param value The amount of token to be burned."
            },
            "functionSelector": "42966c68",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "305:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "318:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "310:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:15:5"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:5"
            },
            "scope": 805,
            "src": "296:77:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "679:39:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "699:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "705:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "689:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "689:22:5"
                }
              ]
            },
            "documentation": {
              "id": 791,
              "nodeType": "StructuredDocumentation",
              "src": "379:241:5",
              "text": " @dev Burns a specific amount of tokens from the target address and decrements allowance\n @param from address The address which you want to send tokens from\n @param value uint256 The amount of token to be burned"
            },
            "functionSelector": "79cc6790",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "634:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "651:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "643:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "665:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "657:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:29:5"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:5"
            },
            "scope": 805,
            "src": "625:93:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 806,
        "src": "141:579:5",
        "usedErrors": [],
        "usedEvents": [
          331,
          339
        ]
      }
    ],
    "src": "0:721:5"
  },
  "legacyAST": {
    "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20Burnable.sol",
    "exportedSymbols": {
      "ITRC20": [
        340
      ],
      "SafeMath": [
        1631
      ],
      "TRC20": [
        771
      ],
      "TRC20Burnable": [
        805
      ]
    },
    "id": 806,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 773,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "/home/georg/Desktop/tron-contracts/contracts/tokens/TRC20/TRC20.sol",
        "file": "./TRC20.sol",
        "id": 774,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 806,
        "sourceUnit": 772,
        "src": "26:21:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 776,
              "name": "TRC20",
              "nameLocations": [
                "167:5:5"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 771,
              "src": "167:5:5"
            },
            "id": 777,
            "nodeType": "InheritanceSpecifier",
            "src": "167:5:5"
          }
        ],
        "canonicalName": "TRC20Burnable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 775,
          "nodeType": "StructuredDocumentation",
          "src": "49:91:5",
          "text": " @title Burnable Token\n @dev Token that can be irreversibly burned (destroyed)."
        },
        "fullyImplemented": true,
        "id": 805,
        "linearizedBaseContracts": [
          805,
          771,
          340
        ],
        "name": "TRC20Burnable",
        "nameLocation": "150:13:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 789,
              "nodeType": "Block",
              "src": "332:41:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 784,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "348:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "352:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "348:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 786,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 780,
                        "src": "360:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 783,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 739,
                      "src": "342:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "342:24:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 788,
                  "nodeType": "ExpressionStatement",
                  "src": "342:24:5"
                }
              ]
            },
            "documentation": {
              "id": 778,
              "nodeType": "StructuredDocumentation",
              "src": "179:112:5",
              "text": " @dev Burns a specific amount of tokens.\n @param value The amount of token to be burned."
            },
            "functionSelector": "42966c68",
            "id": 790,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "305:4:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 781,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 780,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "318:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 790,
                  "src": "310:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 779,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "310:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "309:15:5"
            },
            "returnParameters": {
              "id": 782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:0:5"
            },
            "scope": 805,
            "src": "296:77:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 803,
              "nodeType": "Block",
              "src": "679:39:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 799,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 793,
                        "src": "699:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 800,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "705:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 798,
                      "name": "_burnFrom",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 770,
                      "src": "689:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "689:22:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 802,
                  "nodeType": "ExpressionStatement",
                  "src": "689:22:5"
                }
              ]
            },
            "documentation": {
              "id": 791,
              "nodeType": "StructuredDocumentation",
              "src": "379:241:5",
              "text": " @dev Burns a specific amount of tokens from the target address and decrements allowance\n @param from address The address which you want to send tokens from\n @param value uint256 The amount of token to be burned"
            },
            "functionSelector": "79cc6790",
            "id": 804,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "634:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "651:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "643:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "643:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "665:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 804,
                  "src": "657:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "657:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "642:29:5"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "679:0:5"
            },
            "scope": 805,
            "src": "625:93:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 806,
        "src": "141:579:5",
        "usedErrors": [],
        "usedEvents": [
          331,
          339
        ]
      }
    ],
    "src": "0:721:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.22+commit.5ed3e10f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2025-01-31T04:41:48.112Z"
}